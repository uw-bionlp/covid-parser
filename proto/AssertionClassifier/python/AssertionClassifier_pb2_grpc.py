# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from AssertionClassifier import AssertionClassifier_pb2 as AssertionClassifier_dot_AssertionClassifier__pb2


class AssertionClassifierStub(object):
  """
  python3 -m grpc_tools.protoc -I ./ --python_out=. --grpc_python_out=. AssertionClassifier/AssertionClassifier.proto

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PredictAssertion = channel.unary_unary(
        '/covid.parser.AssertionClassifier/PredictAssertion',
        request_serializer=AssertionClassifier_dot_AssertionClassifier__pb2.AssertionClassifierInput.SerializeToString,
        response_deserializer=AssertionClassifier_dot_AssertionClassifier__pb2.AssertionClassifierOutput.FromString,
        )


class AssertionClassifierServicer(object):
  """
  python3 -m grpc_tools.protoc -I ./ --python_out=. --grpc_python_out=. AssertionClassifier/AssertionClassifier.proto

  """

  def PredictAssertion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AssertionClassifierServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PredictAssertion': grpc.unary_unary_rpc_method_handler(
          servicer.PredictAssertion,
          request_deserializer=AssertionClassifier_dot_AssertionClassifier__pb2.AssertionClassifierInput.FromString,
          response_serializer=AssertionClassifier_dot_AssertionClassifier__pb2.AssertionClassifierOutput.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'covid.parser.AssertionClassifier', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
