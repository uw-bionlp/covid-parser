# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: AssertionClassifier.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='AssertionClassifier.proto',
  package='assertionclassifier',
  syntax='proto3',
  serialized_options=_b('\n2edu.uw.bhi.bionlp.covid.parser.assertionclassifier'),
  serialized_pb=_b('\n\x19\x41ssertionClassifier.proto\x12\x13\x61ssertionclassifier\"V\n\x08Sentence\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x18\n\x10\x62\x65gin_char_index\x18\x02 \x01(\x05\x12\x16\n\x0e\x65nd_char_index\x18\x03 \x01(\x05\x12\x0c\n\x04text\x18\x04 \x01(\t\"&\n\x16SentenceDetectionInput\x12\x0c\n\x04text\x18\x01 \x01(\t\"K\n\x17SentenceDetectionOutput\x12\x30\n\tsentences\x18\x01 \x03(\x0b\x32\x1d.assertionclassifier.Sentence\"P\n\x18\x41ssertionClassifierInput\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x13\n\x0bstart_index\x18\x02 \x01(\x05\x12\x11\n\tend_index\x18\x03 \x01(\x05\"/\n\x19\x41ssertionClassifierOutput\x12\x12\n\nprediction\x18\x01 \x01(\t2\xfa\x01\n\x13\x41ssertionClassifier\x12n\n\x0f\x44\x65tectSentences\x12+.assertionclassifier.SentenceDetectionInput\x1a,.assertionclassifier.SentenceDetectionOutput\"\x00\x12s\n\x10PredictAssertion\x12-.assertionclassifier.AssertionClassifierInput\x1a..assertionclassifier.AssertionClassifierOutput\"\x00\x42\x34\n2edu.uw.bhi.bionlp.covid.parser.assertionclassifierb\x06proto3')
)




_SENTENCE = _descriptor.Descriptor(
  name='Sentence',
  full_name='assertionclassifier.Sentence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='assertionclassifier.Sentence.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='begin_char_index', full_name='assertionclassifier.Sentence.begin_char_index', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_char_index', full_name='assertionclassifier.Sentence.end_char_index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text', full_name='assertionclassifier.Sentence.text', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=136,
)


_SENTENCEDETECTIONINPUT = _descriptor.Descriptor(
  name='SentenceDetectionInput',
  full_name='assertionclassifier.SentenceDetectionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='assertionclassifier.SentenceDetectionInput.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=138,
  serialized_end=176,
)


_SENTENCEDETECTIONOUTPUT = _descriptor.Descriptor(
  name='SentenceDetectionOutput',
  full_name='assertionclassifier.SentenceDetectionOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sentences', full_name='assertionclassifier.SentenceDetectionOutput.sentences', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=253,
)


_ASSERTIONCLASSIFIERINPUT = _descriptor.Descriptor(
  name='AssertionClassifierInput',
  full_name='assertionclassifier.AssertionClassifierInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='assertionclassifier.AssertionClassifierInput.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_index', full_name='assertionclassifier.AssertionClassifierInput.start_index', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_index', full_name='assertionclassifier.AssertionClassifierInput.end_index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=255,
  serialized_end=335,
)


_ASSERTIONCLASSIFIEROUTPUT = _descriptor.Descriptor(
  name='AssertionClassifierOutput',
  full_name='assertionclassifier.AssertionClassifierOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prediction', full_name='assertionclassifier.AssertionClassifierOutput.prediction', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=384,
)

_SENTENCEDETECTIONOUTPUT.fields_by_name['sentences'].message_type = _SENTENCE
DESCRIPTOR.message_types_by_name['Sentence'] = _SENTENCE
DESCRIPTOR.message_types_by_name['SentenceDetectionInput'] = _SENTENCEDETECTIONINPUT
DESCRIPTOR.message_types_by_name['SentenceDetectionOutput'] = _SENTENCEDETECTIONOUTPUT
DESCRIPTOR.message_types_by_name['AssertionClassifierInput'] = _ASSERTIONCLASSIFIERINPUT
DESCRIPTOR.message_types_by_name['AssertionClassifierOutput'] = _ASSERTIONCLASSIFIEROUTPUT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Sentence = _reflection.GeneratedProtocolMessageType('Sentence', (_message.Message,), {
  'DESCRIPTOR' : _SENTENCE,
  '__module__' : 'AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:assertionclassifier.Sentence)
  })
_sym_db.RegisterMessage(Sentence)

SentenceDetectionInput = _reflection.GeneratedProtocolMessageType('SentenceDetectionInput', (_message.Message,), {
  'DESCRIPTOR' : _SENTENCEDETECTIONINPUT,
  '__module__' : 'AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:assertionclassifier.SentenceDetectionInput)
  })
_sym_db.RegisterMessage(SentenceDetectionInput)

SentenceDetectionOutput = _reflection.GeneratedProtocolMessageType('SentenceDetectionOutput', (_message.Message,), {
  'DESCRIPTOR' : _SENTENCEDETECTIONOUTPUT,
  '__module__' : 'AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:assertionclassifier.SentenceDetectionOutput)
  })
_sym_db.RegisterMessage(SentenceDetectionOutput)

AssertionClassifierInput = _reflection.GeneratedProtocolMessageType('AssertionClassifierInput', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONCLASSIFIERINPUT,
  '__module__' : 'AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:assertionclassifier.AssertionClassifierInput)
  })
_sym_db.RegisterMessage(AssertionClassifierInput)

AssertionClassifierOutput = _reflection.GeneratedProtocolMessageType('AssertionClassifierOutput', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONCLASSIFIEROUTPUT,
  '__module__' : 'AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:assertionclassifier.AssertionClassifierOutput)
  })
_sym_db.RegisterMessage(AssertionClassifierOutput)


DESCRIPTOR._options = None

_ASSERTIONCLASSIFIER = _descriptor.ServiceDescriptor(
  name='AssertionClassifier',
  full_name='assertionclassifier.AssertionClassifier',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=387,
  serialized_end=637,
  methods=[
  _descriptor.MethodDescriptor(
    name='DetectSentences',
    full_name='assertionclassifier.AssertionClassifier.DetectSentences',
    index=0,
    containing_service=None,
    input_type=_SENTENCEDETECTIONINPUT,
    output_type=_SENTENCEDETECTIONOUTPUT,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='PredictAssertion',
    full_name='assertionclassifier.AssertionClassifier.PredictAssertion',
    index=1,
    containing_service=None,
    input_type=_ASSERTIONCLASSIFIERINPUT,
    output_type=_ASSERTIONCLASSIFIEROUTPUT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSERTIONCLASSIFIER)

DESCRIPTOR.services_by_name['AssertionClassifier'] = _ASSERTIONCLASSIFIER

# @@protoc_insertion_point(module_scope)
