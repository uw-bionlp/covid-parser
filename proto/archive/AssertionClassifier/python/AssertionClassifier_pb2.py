# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: AssertionClassifier/AssertionClassifier.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='AssertionClassifier/AssertionClassifier.proto',
  package='covid.parser',
  syntax='proto3',
  serialized_options=b'\n%edu.uw.bhi.bionlp.covid.parser.assert',
  serialized_pb=b'\n-AssertionClassifier/AssertionClassifier.proto\x12\x0c\x63ovid.parser\"Z\n\x18\x41ssertionClassifierInput\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x18\n\x10start_char_index\x18\x02 \x01(\x05\x12\x16\n\x0e\x65nd_char_index\x18\x03 \x01(\x05\">\n\x19\x41ssertionClassifierOutput\x12\x12\n\nprediction\x18\x01 \x01(\t\x12\r\n\x05\x65rror\x18\x02 \x01(\t2|\n\x13\x41ssertionClassifier\x12\x65\n\x10PredictAssertion\x12&.covid.parser.AssertionClassifierInput\x1a\'.covid.parser.AssertionClassifierOutput\"\x00\x42\'\n%edu.uw.bhi.bionlp.covid.parser.assertb\x06proto3'
)




_ASSERTIONCLASSIFIERINPUT = _descriptor.Descriptor(
  name='AssertionClassifierInput',
  full_name='covid.parser.AssertionClassifierInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='covid.parser.AssertionClassifierInput.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_char_index', full_name='covid.parser.AssertionClassifierInput.start_char_index', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_char_index', full_name='covid.parser.AssertionClassifierInput.end_char_index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=153,
)


_ASSERTIONCLASSIFIEROUTPUT = _descriptor.Descriptor(
  name='AssertionClassifierOutput',
  full_name='covid.parser.AssertionClassifierOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prediction', full_name='covid.parser.AssertionClassifierOutput.prediction', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='covid.parser.AssertionClassifierOutput.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=217,
)

DESCRIPTOR.message_types_by_name['AssertionClassifierInput'] = _ASSERTIONCLASSIFIERINPUT
DESCRIPTOR.message_types_by_name['AssertionClassifierOutput'] = _ASSERTIONCLASSIFIEROUTPUT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AssertionClassifierInput = _reflection.GeneratedProtocolMessageType('AssertionClassifierInput', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONCLASSIFIERINPUT,
  '__module__' : 'AssertionClassifier.AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:covid.parser.AssertionClassifierInput)
  })
_sym_db.RegisterMessage(AssertionClassifierInput)

AssertionClassifierOutput = _reflection.GeneratedProtocolMessageType('AssertionClassifierOutput', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONCLASSIFIEROUTPUT,
  '__module__' : 'AssertionClassifier.AssertionClassifier_pb2'
  # @@protoc_insertion_point(class_scope:covid.parser.AssertionClassifierOutput)
  })
_sym_db.RegisterMessage(AssertionClassifierOutput)


DESCRIPTOR._options = None

_ASSERTIONCLASSIFIER = _descriptor.ServiceDescriptor(
  name='AssertionClassifier',
  full_name='covid.parser.AssertionClassifier',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=219,
  serialized_end=343,
  methods=[
  _descriptor.MethodDescriptor(
    name='PredictAssertion',
    full_name='covid.parser.AssertionClassifier.PredictAssertion',
    index=0,
    containing_service=None,
    input_type=_ASSERTIONCLASSIFIERINPUT,
    output_type=_ASSERTIONCLASSIFIEROUTPUT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ASSERTIONCLASSIFIER)

DESCRIPTOR.services_by_name['AssertionClassifier'] = _ASSERTIONCLASSIFIER

# @@protoc_insertion_point(module_scope)
