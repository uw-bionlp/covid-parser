# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: OpenNLP/OpenNLP.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='OpenNLP/OpenNLP.proto',
  package='opennlp',
  syntax='proto3',
  serialized_options=b'\n&edu.uw.bhi.bionlp.covid.parser.opennlp',
  serialized_pb=b'\n\x15OpenNLP/OpenNLP.proto\x12\x07opennlp\"V\n\x08Sentence\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x18\n\x10\x62\x65gin_char_index\x18\x02 \x01(\x05\x12\x16\n\x0e\x65nd_char_index\x18\x03 \x01(\x05\x12\x0c\n\x04text\x18\x04 \x01(\t\"2\n\x16SentenceDetectionInput\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\"i\n\x17SentenceDetectionOutput\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\x12$\n\tsentences\x18\x03 \x03(\x0b\x32\x11.opennlp.Sentence\x12\x0e\n\x06\x65rrors\x18\x04 \x03(\t2_\n\x07OpenNLP\x12T\n\x0f\x44\x65tectSentences\x12\x1f.opennlp.SentenceDetectionInput\x1a .opennlp.SentenceDetectionOutputB(\n&edu.uw.bhi.bionlp.covid.parser.opennlpb\x06proto3'
)




_SENTENCE = _descriptor.Descriptor(
  name='Sentence',
  full_name='opennlp.Sentence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='opennlp.Sentence.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='begin_char_index', full_name='opennlp.Sentence.begin_char_index', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_char_index', full_name='opennlp.Sentence.end_char_index', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text', full_name='opennlp.Sentence.text', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=120,
)


_SENTENCEDETECTIONINPUT = _descriptor.Descriptor(
  name='SentenceDetectionInput',
  full_name='opennlp.SentenceDetectionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='opennlp.SentenceDetectionInput.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text', full_name='opennlp.SentenceDetectionInput.text', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=122,
  serialized_end=172,
)


_SENTENCEDETECTIONOUTPUT = _descriptor.Descriptor(
  name='SentenceDetectionOutput',
  full_name='opennlp.SentenceDetectionOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='opennlp.SentenceDetectionOutput.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='text', full_name='opennlp.SentenceDetectionOutput.text', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sentences', full_name='opennlp.SentenceDetectionOutput.sentences', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='errors', full_name='opennlp.SentenceDetectionOutput.errors', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=279,
)

_SENTENCEDETECTIONOUTPUT.fields_by_name['sentences'].message_type = _SENTENCE
DESCRIPTOR.message_types_by_name['Sentence'] = _SENTENCE
DESCRIPTOR.message_types_by_name['SentenceDetectionInput'] = _SENTENCEDETECTIONINPUT
DESCRIPTOR.message_types_by_name['SentenceDetectionOutput'] = _SENTENCEDETECTIONOUTPUT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Sentence = _reflection.GeneratedProtocolMessageType('Sentence', (_message.Message,), {
  'DESCRIPTOR' : _SENTENCE,
  '__module__' : 'OpenNLP.OpenNLP_pb2'
  # @@protoc_insertion_point(class_scope:opennlp.Sentence)
  })
_sym_db.RegisterMessage(Sentence)

SentenceDetectionInput = _reflection.GeneratedProtocolMessageType('SentenceDetectionInput', (_message.Message,), {
  'DESCRIPTOR' : _SENTENCEDETECTIONINPUT,
  '__module__' : 'OpenNLP.OpenNLP_pb2'
  # @@protoc_insertion_point(class_scope:opennlp.SentenceDetectionInput)
  })
_sym_db.RegisterMessage(SentenceDetectionInput)

SentenceDetectionOutput = _reflection.GeneratedProtocolMessageType('SentenceDetectionOutput', (_message.Message,), {
  'DESCRIPTOR' : _SENTENCEDETECTIONOUTPUT,
  '__module__' : 'OpenNLP.OpenNLP_pb2'
  # @@protoc_insertion_point(class_scope:opennlp.SentenceDetectionOutput)
  })
_sym_db.RegisterMessage(SentenceDetectionOutput)


DESCRIPTOR._options = None

_OPENNLP = _descriptor.ServiceDescriptor(
  name='OpenNLP',
  full_name='opennlp.OpenNLP',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=281,
  serialized_end=376,
  methods=[
  _descriptor.MethodDescriptor(
    name='DetectSentences',
    full_name='opennlp.OpenNLP.DetectSentences',
    index=0,
    containing_service=None,
    input_type=_SENTENCEDETECTIONINPUT,
    output_type=_SENTENCEDETECTIONOUTPUT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_OPENNLP)

DESCRIPTOR.services_by_name['OpenNLP'] = _OPENNLP

# @@protoc_insertion_point(module_scope)
